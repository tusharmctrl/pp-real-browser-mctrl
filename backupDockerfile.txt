# # shellcheck shell=bash
# # Bash script that calls docker as a client to the host daemon
# # See documentation: https://www.windmill.dev/docs/advanced/docker
# msg="${1:-world}"

# IMAGE="alpine:latest"
# COMMAND="/bin/echo Hello $msg"

# # ensure that the image is up-to-date
# docker pull $IMAGE
# docker run --rm $IMAGE $COMMAND


# #!/bin/bash
# set -e

# # Check if the repository already exists
# if [ ! -d "pp-real-browser-mctrl" ]; then
#   # Clone the repository
#   git clone https://github.com/tusharmctrl/pp-real-browser-mctrl
# fi

# # Navigate into the cloned repository directory
# cd pp-real-browser-mctrl

# # Pull the latest changes
# git pull

# # Build the Docker image
# docker build -t pp-real-browser-mctrl .
# docker run -e URL="https://www.esparkinfo.com" pp-real-browser-mctrl

# #!/bin/bash
set -e

REPO_URL="https://github.com/tusharmctrl/pp-real-browser-mctrl"
IMAGE_NAME="pp-real-browser-mctrl"
CONTAINER_NAME="pp-real-browser-mctrl-container"
URL="https://www.stake.com/"
# URL="https://www.esparkinfo.com"
HOST_SCREENSHOT_PATH="/pp/screenshot.txt"

# Ensure the /pp directory exists on the host
mkdir -p /pp

# Check if the repository already exists
if [ ! -d "pp-real-browser-mctrl" ]; then
  # Clone the repository
  git clone $REPO_URL
fi

# Navigate into the cloned repository directory
cd pp-real-browser-mctrl

# Pull the latest changes
git pull

# Check if the Docker image exists
if [[ "$(docker images -q $IMAGE_NAME 2> /dev/null)" == "" ]]; then
  # Build the Docker image if it doesn't exist
  docker build -t $IMAGE_NAME .
fi

# Check if a container with the specified name already exists
EXISTING_CONTAINER=$(docker ps -aq -f name=$CONTAINER_NAME)
if [[ "$EXISTING_CONTAINER" ]]; then
  echo "Removing existing container $EXISTING_CONTAINER"
  docker rm -f $EXISTING_CONTAINER
fi

# Run the Docker container
docker run --name $CONTAINER_NAME -e URL=$URL $IMAGE_NAME

# Copy the screenshot file from the container to the host
docker cp $CONTAINER_NAME:$HOST_SCREENSHOT_PATH $HOST_SCREENSHOT_PATH

# Display the contents of the saved screenshot file
cat $HOST_SCREENSHOT_PATH
